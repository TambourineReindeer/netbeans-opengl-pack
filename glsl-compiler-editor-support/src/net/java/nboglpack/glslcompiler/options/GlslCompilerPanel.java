package net.java.nboglpack.glslcompiler.options;

import java.util.prefs.Preferences;
import java.util.regex.Pattern;
import org.openide.util.NbPreferences;

/**
 * Created on 15. March 2007, 16:10
 * @author Michael Bien
 */
final class GlslCompilerPanel extends javax.swing.JPanel {
    
    private final GlslCompilerOptionsPanelController controller;
    
    GlslCompilerPanel(GlslCompilerOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel optionsPanel = new javax.swing.JPanel();
        javax.swing.JLabel patternLabel = new javax.swing.JLabel();
        patternTextField = new javax.swing.JTextField();
        javax.swing.JPanel runtimePanel = new javax.swing.JPanel();
        javax.swing.JLabel glVersion = new javax.swing.JLabel();
        glVersionLabel = new javax.swing.JLabel();
        javax.swing.JLabel gpuVendor = new javax.swing.JLabel();
        vendorLabel = new javax.swing.JLabel();
        javax.swing.JLabel joglVersion = new javax.swing.JLabel();
        joglVersionLabel = new javax.swing.JLabel();

        optionsPanel.setBackground(getBackground());
        optionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("compiler error log parser configuration"));

        org.openide.awt.Mnemonics.setLocalizedText(patternLabel, "error log pattern:");

        org.jdesktop.layout.GroupLayout optionsPanelLayout = new org.jdesktop.layout.GroupLayout(optionsPanel);
        optionsPanel.setLayout(optionsPanelLayout);
        optionsPanelLayout.setHorizontalGroup(
            optionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(optionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(patternLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 84, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(patternTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE))
        );
        optionsPanelLayout.setVerticalGroup(
            optionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(optionsPanelLayout.createSequentialGroup()
                .add(optionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(patternLabel)
                    .add(patternTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        runtimePanel.setBackground(getBackground());
        runtimePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("OpenGL Runtime Information"));

        org.openide.awt.Mnemonics.setLocalizedText(glVersion, "OpenGL Version:");

        org.openide.awt.Mnemonics.setLocalizedText(glVersionLabel, "jLabel2");

        org.openide.awt.Mnemonics.setLocalizedText(gpuVendor, "GPU Vendor:");

        org.openide.awt.Mnemonics.setLocalizedText(vendorLabel, "jLabel4");

        org.openide.awt.Mnemonics.setLocalizedText(joglVersion, "JOGL Version:");

        org.openide.awt.Mnemonics.setLocalizedText(joglVersionLabel, "jLabel6");

        org.jdesktop.layout.GroupLayout runtimePanelLayout = new org.jdesktop.layout.GroupLayout(runtimePanel);
        runtimePanel.setLayout(runtimePanelLayout);
        runtimePanelLayout.setHorizontalGroup(
            runtimePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(runtimePanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(runtimePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(glVersion)
                    .add(gpuVendor)
                    .add(joglVersion))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(runtimePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(joglVersionLabel)
                    .add(vendorLabel)
                    .add(glVersionLabel))
                .addContainerGap(179, Short.MAX_VALUE))
        );
        runtimePanelLayout.setVerticalGroup(
            runtimePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(runtimePanelLayout.createSequentialGroup()
                .add(runtimePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(glVersion)
                    .add(glVersionLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(runtimePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(gpuVendor)
                    .add(vendorLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(runtimePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(joglVersion)
                    .add(joglVersionLabel))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, runtimePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, optionsPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(runtimePanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(optionsPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    void load() {
        Preferences preferences = NbPreferences.forModule(GlslCompilerPanel.class);
        patternTextField.setText(preferences.get("GlslCompilerLogPattern", ""));
        glVersionLabel.setText(preferences.get("GLVersion", ""));
        vendorLabel.setText(preferences.get("GLVendor", ""));
        joglVersionLabel.setText(preferences.get("JOGLVersion", ""));
    }
    
    void store() {
        if(valid())
            NbPreferences.forModule(GlslCompilerPanel.class).put("GlslCompilerLogPattern", patternTextField.getText());
    }
    
    boolean valid() {
        
        String pattern = patternTextField.getText();
        if(pattern == null || pattern.trim().equals(""))
            return false;
        
        try{
            Pattern.compile(pattern);
            return true;
        }catch(Exception ex){
            return false; 
        }
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel glVersionLabel;
    private javax.swing.JLabel joglVersionLabel;
    private javax.swing.JTextField patternTextField;
    private javax.swing.JLabel vendorLabel;
    // End of variables declaration//GEN-END:variables
    
}
